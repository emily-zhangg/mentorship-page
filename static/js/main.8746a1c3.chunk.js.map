{"version":3,"sources":["assets/index.js","components/header.jsx","components/profile-card.jsx","components/profile-modal.jsx","components/search-bar.jsx","mentors.js","App.js","serviceWorker.js","index.js"],"names":["advisoryLogo","process","advisoryMentorshipLogo","NavBar","className","href","src","alt","Header","target","rel","ReadMore","onReadMore","onClick","ProfileCard","mentor","height","offset","once","thumbnailImageUrl","name","industry","Chip","size","label","color","role","organisation","CloseButton","onClose","ProfileModal","isOpen","scrollEl","useRef","overlayClassName","shouldCloseOnOverlayClick","onAfterOpen","disableBodyScroll","current","reserveScrollBarGap","onRequestClose","onAfterClose","clearAllBodyScrollLocks","closeTimeoutMS","contentLabel","ref","fullImageUrl","class","school","courseOfStudy","fullBio","useStyles","makeStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","SearchBar","mentors","setHasSearch","setSearchResults","useState","field","setField","classes","documents","useMemo","Object","values","searchIndex","lunr","this","b","k1","forEach","doc","add","searchValue","setSearchValue","delayDebounceFn","setTimeout","trim","length","query","split","map","word","join","results","search","item","replace","clearTimeout","noValidate","autoComplete","TextField","id","onChange","newValue","value","FormControl","Select","labelId","event","MenuItem","fetchMentors","setMentors","setMentorIds","a","mentorIds","fetch","then","response","json","data","images","Photo","Name","Biography","Organisation","School","url","undefined","thumbnails","large","mentorId","push","setHash","hash","window","history","replaceState","App","isModalOpen","setIsModalOpen","activeMentorId","setActiveMentorId","activateModal","hasMentorsFetched","setHasMentorsFetched","useEffect","fetchData","ensureModalFromHash","location","slice","hasOwnProperty","addEventListener","removeEventListener","hasSearch","searchResults","visibleMentorIds","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","ReactModal","setAppElement","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8746a1c3.chunk.js","sourcesContent":["export const advisoryLogo = `${process.env.PUBLIC_URL}/advisory-logo.png`;\nexport const advisoryMentorshipLogo = `${process.env.PUBLIC_URL}/advisory-mentorship-logo.png`;\n","import React from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\n\nimport { advisoryLogo, advisoryMentorshipLogo } from \"../assets\";\n\nimport \"./header.css\";\n\nconst NavBar = () => (\n  <div className=\"nav\">\n    <a className=\"nav-back-to-main-site\" href=\"https://advisory.sg\">\n      <IoIosArrowBack className=\"nav-arrow-icon\" />\n      back to main site\n    </a>\n    <img className=\"nav-logo\" src={advisoryLogo} alt=\"Advisory\" />\n  </div>\n);\n\nconst Header = () => (\n  <div className=\"header\">\n    <NavBar />\n    <div className=\"header-bottom\">\n      <img\n        className=\"header-mentorship-logo\"\n        src={advisoryMentorshipLogo}\n        alt=\"Advisory Mentorship Programme\"\n      />\n      <div className=\"header-mentorship-intro\">\n        <p>\n          The Advisory Mentorship Programme pairs students with working\n          professionals in their fields of interest on a 1-1 basis. Over the\n          course of four months, from June to September 2021, mentors give an\n          hour each month to meet with their mentee. In its first run in 2020,\n          the programme delivered over 2,000 hours of mentorship to 694 students\n          with the involvement of over 562 mentors. This year, we are delighted\n          to have more than 800 mentors, whose fields of expertise range across\n          48 different industries.\n        </p>\n        <p>\n          Click{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://advisorysg.typeform.com/to/Q5iHzn#source=mentorsite\"\n          >\n            here\n          </a>{\" \"}\n          to apply as a mentee.\n        </p>\n        <p>\n          Click{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://drive.google.com/file/d/1w7zlMuGY_7hVXeW0LaNKXWWjLRt3ic4G/view?usp=sharing\"\n          >\n            here\n          </a>{\" \"}\n          to view the application guide on CVs and resumes.\n        </p>\n        <p>\n          Click{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://drive.google.com/file/d/1aA3l_WQ1ehGO8UBKuRFLqj4URpQbAVzN/view?usp=sharing\"\n          >\n            here\n          </a>{\" \"}\n          to view a sample application response.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import LazyLoad from \"react-lazyload\";\nimport React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport \"./profile-card.css\";\n\nconst ReadMore = ({ onReadMore }) => (\n  <div className=\"card-read-more-container\">\n    <button className=\"card-read-more\" onClick={onReadMore}>\n      Read More\n    </button>\n  </div>\n);\n\nconst ProfileCard = ({ mentor, onReadMore }) => (\n  <div className=\"card\">\n    <div className=\"card-image-region\">\n      <LazyLoad height={160} offset={480} once>\n        <img\n          className=\"card-image\"\n          src={process.env.PUBLIC_URL + mentor.thumbnailImageUrl}\n          alt={mentor.name}\n        />\n      </LazyLoad>\n    </div>\n    {mentor.industry && (\n      <Chip\n        className=\"card-chip\"\n        size=\"small\"\n        label={mentor.industry}\n        color=\"primary\"\n      />\n    )}\n    <div className=\"card-descriptors\">\n      <div className=\"card-name\">{mentor.name}</div>\n      {mentor.role && <div className=\"card-desc\">{mentor.role}</div>}\n      {mentor.organisation && (\n        <div className=\"card-desc\">{mentor.organisation}</div>\n      )}\n    </div>\n    <ReadMore onReadMore={onReadMore} />\n  </div>\n);\n\nexport default ProfileCard;\n","import React, { useRef } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { disableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport { MdClose } from \"react-icons/md\";\n\nimport \"./profile-modal.css\";\n\nconst CloseButton = ({ onClose }) => (\n  <button className=\"modal-close\" onClick={onClose}>\n    <MdClose />\n  </button>\n);\n\nconst ProfileModal = ({ isOpen, mentor, onClose }) => {\n  mentor || (mentor = {});\n\n  const scrollEl = useRef(null);\n\n  // Disable body scroll when modal is open.\n  const onAfterOpenHandler = () =>\n    disableBodyScroll(scrollEl.current, { reserveScrollBarGap: true });\n  const onAfterCloseHandler = () => clearAllBodyScrollLocks();\n\n  return (\n    <ReactModal\n      className=\"modal-container\"\n      overlayClassName=\"modal-overlay\"\n      isOpen={isOpen}\n      shouldCloseOnOverlayClick={true}\n      onAfterOpen={onAfterOpenHandler}\n      onRequestClose={onClose}\n      onAfterClose={onAfterCloseHandler}\n      /* Set a timeout so modal element is removed after transition (0.3s). */\n      closeTimeoutMS={300}\n      contentLabel=\"View Details\"\n    >\n      <CloseButton onClose={onClose} />\n      <div className=\"modal-content\" ref={scrollEl}>\n        <div className=\"modal-left\">\n          <img\n            className=\"modal-image\"\n            src={process.env.PUBLIC_URL + mentor.fullImageUrl}\n            alt={mentor.name}\n          />\n          <div class=\"modal-metadata-container\">\n            <h2>{mentor.name}</h2>\n            <div className=\"modal-metadata\">\n              <strong>Role:</strong> {mentor.role}\n            </div>\n            {mentor.industry && (\n              <div className=\"modal-metadata\">\n                <strong>Industry:</strong> {mentor.industry}\n              </div>\n            )}\n            {mentor.organisation && (\n              <div className=\"modal-metadata\">\n                <strong>Organisation:</strong> {mentor.organisation}\n              </div>\n            )}\n            {mentor.school && (\n              <div className=\"modal-metadata\">\n                <strong>School Graduated From:</strong> {mentor.school}\n              </div>\n            )}\n            {mentor.courseOfStudy && (\n              <div className=\"modal-metadata\">\n                <strong>Course of Study:</strong> {mentor.courseOfStudy}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"modal-right\">\n          <p className=\"modal-bio\">{mentor.fullBio}</p>\n        </div>\n      </div>\n    </ReactModal>\n  );\n};\n\nexport default ProfileModal;\n","import React, { useMemo, useState } from \"react\";\n\nimport lunr from \"lunr\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport \"./search-bar.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 150,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\nconst SearchBar = ({ mentors, setHasSearch, setSearchResults }) => {\n  const [field, setField] = useState(\"name\");\n  const classes = useStyles();\n  const documents = useMemo(() => Object.values(mentors), [mentors]);\n  const searchIndex = useMemo(\n    () =>\n      lunr(function () {\n        this.ref(\"name\");\n        this.field(\"name\");\n        this.field(\"role\");\n        this.field(\"organisation\");\n        this.field(\"school\");\n        this.field(\"courseOfStudy\");\n\n        this.b(0.2);\n        this.k1(1.1);\n\n        documents.forEach((doc) => this.add(doc), this);\n      }),\n    [documents]\n  );\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  useMemo(() => {\n    const delayDebounceFn = setTimeout(() => {\n      if (searchValue.trim().length === 0) {\n        setHasSearch(false);\n        return;\n      }\n\n      const words = searchValue.trim().split(/\\s+/);\n      const query = words.map((word) => field + \":\" + word).join(\" \");\n      const results = searchIndex\n        .search(query)\n        .map((item) => item.ref.replace(/\\W/g, \"\"));\n      setHasSearch(true);\n      setSearchResults(results);\n    }, 200);\n    return () => clearTimeout(delayDebounceFn);\n  }, [field, searchIndex, searchValue, setHasSearch, setSearchResults]);\n\n  return (\n    <form noValidate autoComplete=\"off\" className=\"search-bar\">\n      <TextField\n        id=\"standard-search\"\n        label=\"Search mentors by...\"\n        onChange={(newValue) => setSearchValue(newValue.target.value)}\n      />\n      <FormControl className={classes.formControl}>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={field}\n          onChange={(event) => setField(event.target.value)}\n        >\n          <MenuItem value=\"name\">Name</MenuItem>\n          <MenuItem value=\"role\">Role</MenuItem>\n          <MenuItem value=\"organisation\">Organisation</MenuItem>\n          <MenuItem value=\"school\">School</MenuItem>\n          <MenuItem value=\"courseOfStudy\">Course</MenuItem>\n        </Select>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","export const fetchMentors = async (setMentors, setMentorIds) => {\n  const mentors = {};\n  const mentorIds = [];\n\n  const mentorsData = await fetch(\n    \"https://d21fj0gildolug.cloudfront.net/load_mentors\"\n  )\n    .then((response) => response.json())\n    .then((data) => data.mentors);\n\n  mentorsData.forEach(\n    ({\n      Photo: images,\n      Name: name,\n      Biography: fullBio,\n      \"Job Title\": role,\n      \"Industry 1\": industry,\n      Organisation: organisation,\n      School: school,\n      \"Course of Study\": courseOfStudy,\n    }) => {\n      var fullImageUrl, thumbnailImageUrl;\n\n      fullImageUrl = images ? images[0].url : undefined;\n      thumbnailImageUrl = images ? images[0].thumbnails.large.url : undefined;\n\n      // The regex below serves to omit non-alphanumeric characters from name variable\n      var mentorId = name.replace(/\\W/g, \"\");\n\n      mentors[mentorId] = {\n        courseOfStudy,\n        fullBio,\n        fullImageUrl,\n        industry,\n        name,\n        organisation,\n        role,\n        school,\n        thumbnailImageUrl,\n      };\n      mentorIds.push(mentorId);\n    }\n  );\n\n  setMentors(mentors);\n  setMentorIds(mentorIds);\n};\n","import React, { useEffect, useMemo, useState } from \"react\";\n\nimport Header from \"./components/header\";\nimport ProfileCard from \"./components/profile-card\";\nimport ProfileModal from \"./components/profile-modal\";\nimport SearchBar from \"./components/search-bar\";\nimport { fetchMentors } from \"./mentors\";\n\nimport \"./App.css\";\n\nconst setHash = (hash) => window.history.replaceState({}, \"\", `#${hash}`);\n\nfunction App() {\n  const [mentors, setMentors] = useState([]);\n  const [mentorIds, setMentorIds] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [activeMentorId, setActiveMentorId] = useState(\"\");\n  const activateModal = (mentorId) => {\n    setActiveMentorId(mentorId);\n    setIsModalOpen(true);\n  };\n\n  const [hasMentorsFetched, setHasMentorsFetched] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      await fetchMentors(setMentors, setMentorIds);\n      setHasMentorsFetched(true);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Checks hash and ensures that any modal with a corresponding name is open.\n    const ensureModalFromHash = () => {\n      const mentorId = window.location.hash.slice(1);\n      if (mentors.hasOwnProperty(mentorId)) {\n        if (!isModalOpen || mentorId !== activeMentorId) {\n          activateModal(mentorId);\n          return true;\n        }\n      }\n    };\n\n    // If modal is open, ensure that the hash is active.\n    if (isModalOpen) {\n      setHash(activeMentorId);\n    } else {\n      // If modal is not open and `activeMentorId === \"\"`, this must be the\n      // initial load. Check for a hash, and open the modal if such an ID\n      // exists.\n      if (activeMentorId === \"\") {\n        if (!ensureModalFromHash()) {\n          // Otherwise, set a default ID, but do not open the modal.\n          setActiveMentorId(\"\");\n        }\n      } else {\n        // An ID exists, but the modal is not open, so remove the hash.\n        setHash(\"\");\n      }\n    }\n\n    // Add event listeners to catch if the user manually changes the hash.\n    window.addEventListener(\"hashchange\", ensureModalFromHash, false);\n    return () =>\n      window.removeEventListener(\"hashchange\", ensureModalFromHash, false);\n  }, [isModalOpen, activeMentorId, mentors]);\n\n  const [hasSearch, setHasSearch] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const visibleMentorIds = useMemo(\n    () => (hasSearch ? searchResults : mentorIds),\n    [hasSearch, searchResults, mentorIds]\n  );\n\n  return (\n    <div className=\"container\">\n      <Header />\n\n      <div className=\"canvas\">\n        <p className=\"disclaimer\">\n          <small>\n            All Mentors have the rights to privacy and non-harassment that must\n            be respected. You are hereby informed not to misrepresent your\n            relationship or affiliation with Advisory in any way and on any\n            platform, if and when you communicate with any mentors. Failing\n            which you accept that you have been informed and therefore\n            understand that legal action may be taken against you.\n          </small>\n        </p>\n        {hasMentorsFetched ? (\n          <div>\n            <SearchBar\n              mentors={mentors}\n              setHasSearch={setHasSearch}\n              setSearchResults={setSearchResults}\n            />\n            <p className=\"results-text\">\n              Displaying {visibleMentorIds.length} search result(s).\n            </p>\n            <div className=\"card-container\">\n              {visibleMentorIds.map((mentorId) => (\n                <ProfileCard\n                  key={mentorId}\n                  mentor={mentors[mentorId]}\n                  onReadMore={() => activateModal(mentorId)}\n                />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <p className=\"placeholder-text\">Loading...</p>\n        )}\n      </div>\n\n      <ProfileModal\n        isOpen={isModalOpen}\n        mentor={mentors[activeMentorId]}\n        onClose={() => setIsModalOpen(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactModal from \"react-modal\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nReactModal.setAppElement(\"#root\");\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}